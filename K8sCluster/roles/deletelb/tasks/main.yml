- name: Destroy LB
  elb_application_lb:
    name: "steve-k8s-{{ ec2env }}-lb"
    region: "{{ region }}"
    state: absent

- name: Wait for ELB destruction as Ansible does not
  pause:
    minutes: 3

- name: Destroy Target Group
  elb_target_group:
    name: "steve-k8s-{{ ec2env }}-tg"
    protocol: http
    vpc_id: "{{ vpc_id[region] }}"
    port: "{{hostvars[item].lbport}}"
    state: absent
    region: "{{ region }}"
  with_items: "{{ groups['ELB'] }}"
  when: "'ELB' in groups"

- name: Check LB record
  set_fact:
    lbdns: "{{ lookup('dig','{{ec2env}}.{{dnsprefix}}.{{dnszone}}')}}"

- name: Remove Wildcard DNS entries
  route53:
    state: absent
    zone: "{{ dnszone }}"
    record: "*.{{ec2env}}.{{dnsprefix}}.{{ dnszone }}"
    type: CNAME
    ttl: 60
    value:
      - "{{ groups['ELB'][0] }}"
  when: lbdns != "NXDOMAIN"

- name: Remove LB DNS entries
  route53:
    state: absent
    zone: "{{ dnszone }}"
    record: "{{ec2env}}.{{dnsprefix}}.{{ dnszone }}"
    type: CNAME
    ttl: 60
    value:
      - "{{ groups['ELB'][0] }}"
  when: lbdns != "NXDOMAIN"

- name: Remove ELB from inventory
  lineinfile:
    path: "{{ playbook_dir }}/environments/{{ ec2env }}/hosts"
    regexp: "^{{item}}"
    state: absent
  with_items: "{{ groups['ELB'] }}"
  when: "'ELB' in groups"

- name: Remove ELB Group from inventory
  lineinfile:
    path: "{{ playbook_dir }}/environments/{{ ec2env }}/hosts"
    regexp: "^\\[ELB\\]"
    state: absent
  ignore_errors: true

- name: Refresh ELB inventory
  meta: refresh_inventory
